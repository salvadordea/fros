import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useAuthStore } from '@/store/authStore';\nimport { LoginForm } from '@/types';\nimport LoadingSpinner from '@/components/LoadingSpinner';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const { login, loading } = useAuthStore();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LoginForm>();\n\n  const onSubmit = async (data: LoginForm) => {\n    try {\n      await login(data.email, data.password);\n      navigate('/dashboard');\n    } catch (error) {\n      // Error ya manejado en el store\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-primary-100\">\n            <svg\n              className=\"h-8 w-8 text-primary-600\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n              />\n            </svg>\n          </div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Iniciar Sesión\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Sistema de Control de Bodega de Congelados\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email\n              </label>\n              <input\n                {...register('email', {\n                  required: 'Email es requerido',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Email inválido',\n                  },\n                })}\n                type=\"email\"\n                className=\"input-field mt-1\"\n                placeholder=\"tu@email.com\"\n              />\n              {errors.email && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Contraseña\n              </label>\n              <div className=\"relative mt-1\">\n                <input\n                  {...register('password', {\n                    required: 'Contraseña es requerida',\n                    minLength: {\n                      value: 6,\n                      message: 'Contraseña debe tener al menos 6 caracteres',\n                    },\n                  })}\n                  type={showPassword ? 'text' : 'password'}\n                  className=\"input-field pr-10\"\n                  placeholder=\"Tu contraseña\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  <svg\n                    className=\"h-5 w-5 text-gray-400\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    {showPassword ? (\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L12 12m-2.122-2.122L7.757 7.757M12 12l2.122 2.122M12 12L9.878 9.878M12 12l-2.122-2.122\"\n                      />\n                    ) : (\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                      />\n                    )}\n                  </svg>\n                </button>\n              </div>\n              {errors.password && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"btn-primary w-full flex justify-center items-center\"\n            >\n              {loading ? (\n                <LoadingSpinner size=\"sm\" className=\"mr-2\" />\n              ) : null}\n              {loading ? 'Iniciando sesión...' : 'Iniciar Sesión'}\n            </button>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              ¿No tienes cuenta?{' '}\n              <Link\n                to=\"/register\"\n                className=\"font-medium text-primary-600 hover:text-primary-500\"\n              >\n                Regístrate aquí\n              </Link>\n            </p>\n          </div>\n        </form>\n\n        {/* Credenciales de demostración */}\n        <div className=\"mt-8 p-4 bg-blue-50 rounded-lg\">\n          <h3 className=\"text-sm font-medium text-blue-900 mb-2\">Credenciales de Demostración:</h3>\n          <div className=\"text-xs text-blue-800 space-y-1\">\n            <p><strong>Admin:</strong> admin@fros.com / Admin123!</p>\n            <p><strong>Operador:</strong> operador@fros.com / Operator123!</p>\n            <p><strong>Cliente:</strong> cliente1@example.com / Cliente123!</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;"